Class Pitchfork : BloodWeapon replaces Fist
{
	Default
	{
		Obituary "%o was poked to death by %k.";
		Tag "Pitchfork";
		+WEAPON.WIMPY_WEAPON;
		+WEAPON.MELEEWEAPON;
		Weapon.SlotNumber 1;
		Weapon.SelectionOrder 10;
		Weapon.AmmoUse 0;
		Weapon.AmmoUse2 0;
	} int which;
	States
	{
	Select: 
		FORK A 0
		{
			A_WeaponReady2(WRF_DISABLE, 0, 0);
			A_Overlay(100,"Blood"); Invoker.Which = 0;
			A_OverlayFlags(100,PSPF_ADDWEAPON|PSPF_ADDBOB|PSPF_RENDERSTYLE|PSPF_ALPHA,1);
			A_OverlayRenderStyle(100,STYLE_Translucent);
		}
		"####" "#" 1 A_WeaponReady2(WRF_DISABLE, 0, 48);
		"####" "#" 1 A_WeaponReady2(WRF_DISABLE, 0, 36);
		"####" "#" 1 A_WeaponReady2(WRF_DISABLE, 0, 28);
		"####" "#" 1 A_WeaponReady2(WRF_DISABLE, 0, 20);
		"####" "#" 1 A_WeaponReady2(WRF_DISABLE, 0, 12);
		"####" "#" 1 A_WeaponReady2(WRF_DISABLE, 0, 3);
		"####" "#" 1 A_WeaponReady2(WRF_DISABLE, 0, 2);
		"####" "#" 1 A_WeaponReady2(WRF_DISABLE, 0, 1.5);
		"####" "#" 1 A_WeaponReady2(WRF_DISABLE, 0, 1);
		"####" "#" 1 A_WeaponReady2(WRF_DISABLE, 0, 0.5);
		"####" "#" 1 A_WeaponReady2(WRF_DISABLE, 0, 0.25);
		"####" "###########################" 0 A_Raise();
		Wait;
	Deselect: 
		FORK A 0; 
		"####" "#" 1 A_WeaponReady2(WRF_DISABLE, 0, 3);
		"####" "#" 1 A_WeaponReady2(WRF_DISABLE, 0, 12);
		"####" "#" 1 A_WeaponReady2(WRF_DISABLE, 0, 20);
		"####" "#" 1 A_WeaponReady2(WRF_DISABLE, 0, 28);
		"####" "#" 1 A_WeaponReady2(WRF_DISABLE, 0, 36);
		"####" "#" 1 A_WeaponReady2(WRF_DISABLE, 0, 48);
		Goto DeselectLoop+7;
	Ready: 
		FORK A 1 
		{ 
			A_WeaponReady2(); 
			Invoker.Which = 0; 
			If(Invoker.Owner.Health <= 0) Return ResolveState("Deselect");
			Return ResolveState(Null);
		} 
		Loop;
	AltFire:
	Fire:
		FORK A 1 { A_WeaponReady2(WRF_NOFIRE|WRF_NOSWITCH,-0.25,-2); A_PlaySound("PitchforkSwing",CHAN_WEAPON,0.25); A_Overlay(-51,"Recoil"); Invoker.Which = 0; }
		FORK A 1 { A_WeaponReady2(WRF_NOFIRE|WRF_NOSWITCH,-0.5,-4); Invoker.Which = 0; }
		FORK B 1 { A_WeaponReady2(WRF_NOFIRE|WRF_NOSWITCH,-0.75,-12); Invoker.Which = 1; A_Overlay(-50,"Akimbo"); }
		FORK B 1 { A_WeaponReady2(WRF_NOFIRE|WRF_NOSWITCH,-1,-20); Invoker.Which = 1; }
		FORK C 1 { A_WeaponReady2(WRF_NOFIRE|WRF_NOSWITCH,-1.25,-28); Invoker.Which = 2; }
		FORK C 1
		{
			A_WeaponReady2(WRF_NOFIRE|WRF_NOSWITCH,-1.5,-32); Invoker.Which = 2;
			A_FireBullets(-6,0,-1,random(7,9),"PitchforkHit",FBF_NORANDOM|FBF_EXPLICITANGLE,72);
			A_FireBullets(-2,0,-1,random(7,9),"PitchforkHit",FBF_NORANDOM|FBF_EXPLICITANGLE,72);
			A_FireBullets( 2,0,-1,random(7,9),"PitchforkHit",FBF_NORANDOM|FBF_EXPLICITANGLE,72);
			A_FireBullets( 6,0,-1,random(7,9),"PitchforkHit",FBF_NORANDOM|FBF_EXPLICITANGLE,72);
		}
		FORK C 1 { A_WeaponReady2(WRF_NOFIRE|WRF_NOSWITCH,-1.75,-34); Invoker.Which = 2; }
		FORK C 1 { A_WeaponReady2(WRF_NOFIRE|WRF_NOSWITCH,-1.5,-32); Invoker.Which = 2; }
		FORK C 1 { A_WeaponReady2(WRF_NOFIRE|WRF_NOSWITCH,-1.25,-28); Invoker.Which = 2; }
		FORK B 1 { A_WeaponReady2(WRF_NOFIRE|WRF_NOSWITCH,-1,-20); Invoker.Which = 1; }
		FORK B 1 { A_WeaponReady2(WRF_NOFIRE|WRF_NOSWITCH,-0.75,-12); Invoker.Which = 1; }
		FORK A 1 { A_WeaponReady2(WRF_NOFIRE|WRF_NOSWITCH,-0.5,-4); Invoker.Which = 0; }
		FORK A 1 { A_WeaponReady2(WRF_NOFIRE|WRF_NOSWITCH,-0.25,-2); Invoker.Which = 0; }
		FORK A 1 { A_WeaponReady2(WRF_NOFIRE|WRF_NOSWITCH,0,0); Invoker.Which = 0; }
		FORK A 0 A_ReFire();
		Goto Ready;
	Blood:
		TNT1 A 1
		{
			If(CountInv("PitchforkHitmarker1"))
			{
				A_TakeInventory("PitchforkHitmarker1",1);
				A_TakeInventory("PitchforkHitmarker2",1);
				A_PlaySound("PitchforkWall",CHAN_7);
			}
			
			If(CountInv("PitchforkHitmarker2"))
			{
				A_TakeInventory("PitchforkHitmarker1",1);
				A_TakeInventory("PitchforkHitmarker2",1);
				A_PlaySound("PitchforkHit",CHAN_7);
			}
			
			If(Invoker.Which == 0) { Return ResolveState("BloodyA"); }
			If(Invoker.Which == 1) { Return ResolveState("BloodyB"); }
			If(Invoker.Which == 2) { Return ResolveState("BloodyC"); }
			
			Return ResolveState(Null);
		}
		Loop;
	BloodyA: FORK D 0; Goto BloodShow;
	BloodyB: FORK E 0; Goto BloodShow;
	BloodyC: FORK F 0; Goto BloodShow;
	BloodShow:
		"####" "#" 1 A_OverlayAlpha(100,0.05*CountInv("PitchforkBloodAlpha"));
		Goto Blood;
	
	Akimbo:
		TNT1 A 0 A_JumpIf(Invoker.Owner.CountInv("Power_Akimbo") == 0, "StopOverlay");
		TNT1 A 0
		{
			A_OverlayFlags(-50, PSPF_ALPHA|PSPF_RENDERSTYLE|PSPF_ADDBOB, 1);
			A_OverlayFlags(-50, PSPF_ADDWEAPON, 0);
			A_OverlayRenderStyle(-50, STYLE_SUBTRACT);
			A_OverlayAlpha(-50, 0.025);
		}
		FORK A 1 { A_OverlayOffset(-50, -0.25, 22, WOF_INTERPOLATE); A_OverlayAlpha(-50, 0.1); }
		FORK A 1 { A_OverlayOffset(-50, -0.5, 20, WOF_INTERPOLATE); A_OverlayAlpha(-50, 0.2); }
		FORK B 1 { A_OverlayOffset(-50, -0.75, 12, WOF_INTERPOLATE); A_OverlayAlpha(-50, 0.3); }
		FORK B 1 { A_OverlayOffset(-50, -1, 4, WOF_INTERPOLATE); A_OverlayAlpha(-50, 0.4); }
		FORK C 1 { A_OverlayOffset(-50, -1.25, -4, WOF_INTERPOLATE); A_OverlayAlpha(-50, 0.5); }
		FORK C 1
		{
			A_OverlayOffset(-50, -1.5, -8, WOF_INTERPOLATE); 
			A_FireBullets(-6,0,-1,random(7,9),"PitchforkHit",FBF_NORANDOM|FBF_EXPLICITANGLE,72);
			A_FireBullets(-2,0,-1,random(7,9),"PitchforkHit",FBF_NORANDOM|FBF_EXPLICITANGLE,72);
			A_FireBullets( 2,0,-1,random(7,9),"PitchforkHit",FBF_NORANDOM|FBF_EXPLICITANGLE,72);
			A_FireBullets( 6,0,-1,random(7,9),"PitchforkHit",FBF_NORANDOM|FBF_EXPLICITANGLE,72);
		}
		FORK C 1 A_OverlayOffset(-50, -1.75, -10, WOF_INTERPOLATE);
		FORK C 1 A_OverlayOffset(-50, -1.5, -8, WOF_INTERPOLATE);
		FORK C 1 A_OverlayOffset(-50, -1.25, -4, WOF_INTERPOLATE);
		FORK B 1 { A_OverlayOffset(-50, -1, 4, WOF_INTERPOLATE); A_OverlayAlpha(-50, 0.4); }
		FORK B 1 { A_OverlayOffset(-50, -0.75, 12, WOF_INTERPOLATE); A_OverlayAlpha(-50, 0.3); }
		FORK A 1 { A_OverlayOffset(-50, -0.5, 20, WOF_INTERPOLATE); A_OverlayAlpha(-50, 0.2); }
		FORK A 1 { A_OverlayOffset(-50, -0.25, 22, WOF_INTERPOLATE); A_OverlayAlpha(-50, 0.1); }
		FORK A 1 { A_OverlayOffset(-50, 0, 30, WOF_INTERPOLATE); A_OverlayAlpha(-50, 0.05); }
		Stop;
	Recoil:
		//TNT1 A 2 { BloodyHandler.DoSwing(Self, (0, 0.2), 4, -2, 2, SWING_Spring, 1, 2); }
		//TNT1 A 8 { BloodyHandler.DoSwing(Self, (0, -0.2), 8, -2, 4, SWING_Spring, 1, 2); }
		Stop;
	}
}

Class PitchforkBloodAlpha : Inventory 
{ 
	Default { Inventory.MaxAmount 200; } 
	
	Override void DoEffect()
	{
		Super.DoEffect();
		If(Owner.CountInv("PitchforkBloodTimer") == 0 && Owner.CountInv("PitchforkBloodAlpha") >  0) { Owner.A_TakeInventory("PitchforkBloodAlpha",1); }
	}
}

Class PitchforkHitmarker1 : Inventory { Default { Inventory.MaxAmount 1; } }
Class PitchforkHitmarker2 : PitchforkHitmarker1 {}

Class PitchforkBloodTimer : Inventory
{
	Default { Inventory.MaxAmount 350; }
	
	Override void DoEffect()
	{
		Super.DoEffect();
		If(Owner.CountInv("PitchforkBloodTimer") >  0) { Owner.A_TakeInventory("PitchforkBloodTimer",1); }
	}
}

Class PitchforkHit : BulletHit
{
	States
	{
	Spawn:
		TNT1 A 0 NoDelay
		{
			A_GiveToTarget("PitchforkHitmarker1",1);
			
			For(int i = 0; i != 30; i++)
			{
				A_SpawnParticle("Yellow",SPF_FULLBRIGHT|SPF_RELATIVE,random(70,105),random(3,6),frandom(0,359),0,0,0,frandom(-6,6),frandom(-6,6),frandom(-6,6),0,0,-0.5,frandom(0.75,1),-0.75,-0.5);
			}
		}
		TNT1 A 6 A_SpawnItemEx("LightRicochet",0,0,0,0,0,0,0,SXF_NOCHECKPOSITION|SXF_SETMASTER|SXF_ORIGINATOR,0);
		stop;
	XDeath:
		TNT1 A 0;
		TNT1 A 0
		{
			A_GiveToTarget("PitchforkHitmarker2",1);
			
			If(Tracer && Tracer.bSHOOTABLE && !Tracer.bNOBLOOD) { Tracer.SpawnBlood(Self.Pos,Angle,random(7,9)); }
			A_GiveToTarget("PitchforkBloodAlpha",200);
			A_GiveToTarget("PitchforkBloodTimer",random(9,11));
		}
		Stop;
	}
}

Class PitchforkSound : PitchforkHit
{
	Default { Decal "None"; +NODECAL +FORCEDECAL }
	States
	{
	Spawn:
		TNT1 A 0 NoDelay A_PlaySound("PitchforkWall",CHAN_BODY,1.0);
		stop;
	XDeath:
		TNT1 A 0;
		TNT1 A 0 A_PlaySound("PitchforkHit",CHAN_BODY,1.0);
		Stop;
	}
}