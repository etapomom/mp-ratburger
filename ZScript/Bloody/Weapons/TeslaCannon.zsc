Class TeslaCannon : BloodWeapon replaces PlasmaRifle
{
	Default
	{
		Tag "Tesla Cannon";
		Inventory.PickupMessage "Picked up a Tesla Cannon.";
		Obituary "%o was shocked by %k's Tesla Cannon.";
		Weapon.SlotNumber 8;
		Weapon.SelectionOrder 1;
		Weapon.AmmoType "Charges";
		Weapon.AmmoType2 "Charges";
		Weapon.AmmoUse 1;
		Weapon.AmmoGive 35;
		Weapon.AmmoUse2 1;
		Scale 0.7;
	}
	
	Action State A_FireTeslaCannon(int stream = 0)
	{
		If(CountInv("Charges") == 0) Return ResolveState("Ready");
		
		If(Stream == 1)
		{ If(PressingFire()) Return ResolveState("StopFiring"); }
		
		A_StartSound("TeslaCannon", CHAN_WEAPON, 0, 1.0, 0.95); 
		A_AlertMonsters();
		A_WeaponReady2(WRF_DISABLE, 6, 6);
		
		A_OverlayFlags(102, PSPF_ADDWEAPON|PSPF_ADDBOB|PSPF_RENDERSTYLE|PSPF_ALPHA, 1);
		A_OverlayRenderstyle(102, STYLE_TRANSLUCENT); 
		A_OverlayAlpha(102, 0.75);
		
		A_FireProjectile("TeslaBall", frandom(-1,1), 0, 8, -2, 0, frandom(-1,1)); 
		A_TakeInventory("Charges", 1, TIF_NOTAKEINFINITE);
		A_GunFlash("Flash");
		A_SpawnItemEx("LightTesla", flags: SXF_NOCHECKPOSITION|SXF_SETMASTER); 
		A_QuakeEx(1,1,1,2,0,1,"",QF_RELATIVE|QF_SCALEDOWN,rollIntensity:0.25);
		
		Return ResolveState(null);
	}
	
	States
	{
	Spawn: TSLC A 0; Goto SpawnLoop;
	Select: TESG A 0 { 	A_Overlay(100,"TeslaFX"); 
						A_OverlayFlags(100,PSPF_ADDWEAPON|PSPF_ADDBOB,1);
					 } 	Goto SelectLoop;
	Deselect: TESG A 0 { A_Overlay(100,"StopOverlay"); A_Overlay(101,"StopOverlay"); A_Overlay(102,"StopOverlay"); } Goto DeselectLoop;
	Ready: TESG A 1 A_WeaponReady2(); Loop;
	Fire:
		TESG A 1 BRIGHT A_FireTeslaCannon();
		TESG A 1 A_WeaponReady2(WRF_DISABLE,4,4);
		TESG B 1 A_WeaponReady2(WRF_DISABLE,2,2);
		TESG B 1 BRIGHT A_FireTeslaCannon();
		TESG B 1 A_WeaponReady2(WRF_DISABLE,4,4);
		TESG C 1 A_WeaponReady2(WRF_DISABLE,2,2);
		TESG C 1 BRIGHT A_FireTeslaCannon();
		TESG C 1 A_WeaponReady2(WRF_DISABLE,4,4);
		TESG D 1 A_WeaponReady2(WRF_DISABLE,2,2);
		TESG D 1 BRIGHT A_FireTeslaCannon();
		TESG D 1 A_WeaponReady2(WRF_DISABLE,4,4);
		TESG E 1 A_WeaponReady2(WRF_DISABLE,2,2);
		TESG E 1 BRIGHT A_FireTeslaCannon();
		TESG E 1 A_WeaponReady2(WRF_DISABLE,4,4);
		TESG F 1 A_WeaponReady2(WRF_DISABLE,2,2);
		TNT1 A 0 A_ReFire();
		Goto StopFiring;
	Hold:
		TESG A 1 BRIGHT A_FireTeslaCannon();
		TESG A 1 A_WeaponReady2(WRF_DISABLE,4,4);
		TESG B 1 A_WeaponReady2(WRF_DISABLE,2,2);
		TESG B 0 A_Refire("Hold2");
		Goto StopFiring;
	Hold2:
		TESG B 1 BRIGHT A_FireTeslaCannon();
		TESG B 1 A_WeaponReady2(WRF_DISABLE,4,4);
		TESG C 1 A_WeaponReady2(WRF_DISABLE,2,2);
		TESG B 0 A_Refire("Hold3");
		Goto StopFiring;
	Hold3:
		TESG C 1 BRIGHT A_FireTeslaCannon();
		TESG C 1 A_WeaponReady2(WRF_DISABLE,4,4);
		TESG D 1 A_WeaponReady2(WRF_DISABLE,2,2);
		TESG B 0 A_Refire("Hold4");
		Goto StopFiring;
	Hold4:
		TESG D 1 BRIGHT A_FireTeslaCannon();
		TESG D 1 A_WeaponReady2(WRF_DISABLE,4,4);
		TESG E 1 A_WeaponReady2(WRF_DISABLE,2,2);
		TESG B 0 A_Refire("Hold5");
		Goto StopFiring;
	Hold5:
		TESG E 1 BRIGHT A_FireTeslaCannon();
		TESG E 1 A_WeaponReady2(WRF_DISABLE,4,4);
		TESG F 1 A_WeaponReady2(WRF_DISABLE,2,2);
		TNT1 A 0 A_ReFire("Hold");
	StopFiring:
		TESG AAABBB 1 A_WeaponReady2(WRF_DISABLE);
		TESG CCCCDDDD 1 A_WeaponReady2();
		TESG EEEEEFFFFF 1 A_WeaponReady2();
		Goto Ready;
	AltFire:
		TESG A 0
		{
			If(CountInv("Charges") < 35) { Return ResolveState("Ready"); }
			A_StartSound("TeslaCharge", CHAN_WEAPON, CHANF_OVERLAP, 1.0, 0.8, 1.0); A_AlertMonsters(); // 1.256 seconds (44 Tics)
			Return ResolveState(null);
		}
		TESG AAAABBBB 1 A_WeaponReady2(WRF_DISABLE); //8
		TESG CCCDDD 1 A_WeaponReady2(WRF_DISABLE); //14
		TESG EEFF 1 A_WeaponReady2(WRF_DISABLE); //18
		TESG JJKKLLMMNN 1 BRIGHT A_WeaponReady2(WRF_DISABLE,frandom(-2,2),frandom(-2,2)); //28
		TESG OPQRS 1 BRIGHT A_WeaponReady2(WRF_DISABLE,frandom(-3,3),frandom(-3,3)); //33
		TESG TUVWXTUVWX 1 BRIGHT A_WeaponReady2(WRF_DISABLE,frandom(-4,4),frandom(-4,4));
		TESG U 1 BRIGHT 
		{
			A_StartSound("TeslaAlt", CHAN_WEAPON, CHANF_OVERLAP, 1.0, 0.8); 
			A_AlertMonsters();
			A_FireProjectile("TeslaBallAlt",0,0,4,-3);
			A_TakeInventory("Charges",35,TIF_NOTAKEINFINITE);
			A_WeaponReady2(WRF_DISABLE,22,16); //A_Recoil(10);
			A_GunFlash("AltFlash"); A_SetBlend("LightBlue",0.5,10);
			A_SpawnItemEx("LightTesla",0,0,0,0,0,0,0,SXF_NOCHECKPOSITION|SXF_SETMASTER,0); 
		}
		TESG V 1 BRIGHT A_WeaponReady2(WRF_DISABLE,24,18);
		TESG W 1 BRIGHT A_WeaponReady2(WRF_DISABLE,25,19);
		TESG XOPQRS 1 BRIGHT A_WeaponReady2(WRF_DISABLE,26,20);
		TESG JJ 1 BRIGHT A_WeaponReady2(WRF_DISABLE,25,19);
		TESG KK 1 BRIGHT A_WeaponReady2(WRF_DISABLE,24,18);
		TESG L 1 BRIGHT A_WeaponReady2(WRF_DISABLE,22,16);
		TESG M 1 BRIGHT A_WeaponReady2(WRF_DISABLE,21,15);
		TESG N 1 A_WeaponReady2(WRF_DISABLE,18,12);
		TESG J 1 A_WeaponReady2(WRF_DISABLE,12,6);
		TESG K 1 A_WeaponReady2(WRF_DISABLE,8,4);
		TESG L 1 A_WeaponReady2(WRF_DISABLE,4,2);
		TESG M 1 A_WeaponReady2(WRF_DISABLE,2,0);
		TESG N 1 A_WeaponReady2();
		TESG AAABBB 1 A_WeaponReady2();
		TESG CCCCDDDD 1 A_WeaponReady2();
		TESG EEEEEFFFFF 1 A_WeaponReady2();
		Goto Ready;
		
	TeslaFX:
		TESO ABCDEF 3 BRIGHT;
		Loop;
	
	Flash:
		TNT1 A 1 A_Light(2);
		TNT1 A 1 A_Light(1);
		Goto LightDone;
	AltFlash:
		TNT1 A 1 A_Light(8);
		TNT1 A 1 A_Light(6);
		TNT1 A 1 A_Light(4);
		TNT1 A 1 A_Light(2);
		TNT1 A 1 A_Light(1);
		TNT1 A 0 A_Light(0);
		Stop;
	}
}

Class Charges : Ammo replaces Cell
{
	Default
	{
		Inventory.PickupMessage "Picked up a Tesla charge.";
		Inventory.PickupSound "GotAmmo";
		Inventory.Amount 20;
		Inventory.MaxAmount 250;
		Ammo.BackpackAmount 40;
		Ammo.BackpackMaxAmount 250;
		Inventory.Icon "TESAA0";
		Scale 0.3;
		Radius 4;
		Height 8;
	}
	
	bool RotDir;
	Override void PostBeginPlay()
	{
		Angle = frandom[Blood](0, 359);
		RotDir = random[Blood](0, 1);
	}
	
	States
	{
	Spawn:
		TESA A 1 NoDelay A_Turn(bDROPPED ? Invoker.RotDir ? -4. : 4. : 0);
		Loop;
	}
}

Class TeslaBall : FastProjectile replaces PlasmaBall
{
	Default
	{
		PROJECTILE;
		+ROLLSPRITE
		+INTERPOLATEANGLES
		+NOEXTREMEDEATH
		+FORCEXYBILLBOARD
		+FORCERADIUSDMG
		+BLOODLESSIMPACT
		-BLOODSPLATTER
		Speed 96;
		DamageFunction (random[Blood](14,16));
		DamageType "Shock";
		SeeSound "TeslaStart";
		DeathSound "";
		//ActiveSound "TeslaFly";
		Scale 0.5;
		Radius 1;
		Height 2;
		MissileType "TeslaTrail2";
		MissileHeight 8;
	}
	
	Override Void PostBeginPlay()
	{
		A_SpawnItemEX("TeslaGlow",-8,0,0,0,0,0,0,SXF_NOCHECKPOSITION|SXF_ORIGINATOR,0);
		A_SpawnItemEx("TeslaBallLight",0,0,0,0,0,0,0,SXF_NOCHECKPOSITION|SXF_SETMASTER|SXF_ORIGINATOR,0);
		//A_PlaySound("TeslaFly",CHAN_BODY,1.0,1);
		
		Super.PostBeginPlay();
	}
	
	States
	{
	Spawn:
		TESB A 1 BRIGHT;
		Loop;
	Death:
		TNT1 A 0 A_PlaySound("TeslaHitWall",CHAN_AUTO,0.8);
		TNT1 A 0 A_RemoveChildren(1,RMVF_EVERYTHING,"","TeslaBallLight");
		TNT1 A 0 A_Jump(256,"Fire");
	Fire:
		TNT1 A 6
		{
			If(Random[Blood](0, 255) > 200) A_RadiusGive("BloodyShock", 72, RGF_MONSTERS, random[Blood](17, 19));
			A_SprayDecal("PlasmaScorchLower",8);
			A_Explode((random[Blood](4,6)),72,0,0,0,0,0,"Nothing","Shock");
			A_SpawnItemEx("LightTeslaHit",0,0,0,0,0,0,0,SXF_NOCHECKPOSITION|SXF_SETMASTER|SXF_ORIGINATOR,0);
			
			If(Random(0,255) >= 224)
			{ 
				A_CustomRailgun(0,0,"","",RGF_SILENT,0,64,"Nothing",360,90,256,0,4,0,"TeslaFX3",0,0,0,0); 
			}
			
			For(int i = 0; i != 3; i++)
			{
				A_SpawnItemEx("TeslaShockwave",0,0,0,0,0,0,0,SXF_NOCHECKPOSITION,0);
				For(int b = 0; b != 5; b++)
				{
					A_SpawnItemEx("TeslaFX",0,0,0,frandom(-2.5,2.5),frandom(-2.5,2.5),frandom(-3.5,3.5),frandom(0,359),SXF_NOCHECKPOSITION);
					A_SpawnParticle("LightBlue",SPF_FULLBRIGHT,random(70,90),random(4,7),frandom(0,359),0,0,0,frandom(-6,6),frandom(-6,6),frandom(-6,6),0,0,-0.33,frandom(0.8,1),-0.1,-0.5);
				}
			}
			A_StopSound(CHAN_BODY);
		}
		Stop;
	Crash:
	XDeath:
		TNT1 A 0 A_PlaySound("TeslaHitThing",CHAN_AUTO,0.8);
		TNT1 A 0 A_RemoveChildren(1,RMVF_EVERYTHING,"","TeslaBallLight");
		TNT1 A 0 A_Jump(256,"Fire");
		Goto Fire;
	}
}

Class TeslaGlow : Actor
{
	Default
	{
		Scale .6;
		RenderStyle "Add";
		Alpha 0.75;
		+FORCEXYBILLBOARD
		+ROLLSPRITE
		+ROLLCENTER
		+NOINTERACTION
		+NOGRAVITY
	}
	
	Override Void PostBeginPlay()
	{
		Super.PostBeginPlay();
		A_SetRoll(frandom(0,359));
		bSPRITEFLIP = random(0,1);
	}
	
	States
	{
	Spawn:
		BMFB ABCDE 0 BRIGHT NoDelay A_Jump(128,"Spawned");
		Loop;
	Spawned:
		"####" "#" 1 BRIGHT
		{
			If(Target)
			{
				A_Warp(AAPTR_TARGET,-0.5,0,0,0,WARPF_NOCHECKPOSITION|WARPF_INTERPOLATE);
				A_SetRoll(roll+1,SPF_INTERPOLATE);
			}
			If(!Target)
			{
				Scale.X *= 2.33; 
				Scale.Y = Scale.X; 
				A_FadeOut(0.33,1);
			}
		}
		Wait;
	}
}

Class BloodyShock : Inventory
{
	Default
	{
		+INVENTORY.AUTOACTIVATE
		Inventory.MaxAmount 350;
	}
	
	int even;
	bool bright;
	
	Override void DoEffect()
	{
		Super.DoEffect();
		If(!Owner || Owner.Health <= 0) { Destroy(); Return; }
		If(IsFrozen()) Return;
		For(int i = 0; i != 2; i++)
		{
			Owner.Health += 1;
			If(Owner.Health > 1) Owner.A_DamageSelf(1, "Shock", DMSS_FOILINVUL|DMSS_FOILBUDDHA|DMSS_NOPROTECT|DMSS_NOFACTOR);
		}
		
		If(Random[Blood](0, 255) > 96) Owner.A_SpawnItemEx("TeslaShockLight",0,0,Owner.Height*0.5,0,0,0,0,SXF_SETMASTER);
		
		int maxp = Max(8, (Owner.Radius * 0.67) * Owner.bBOSS?4:1);
		For(int i = 0; i < maxp; i++)
		{
			If(Random(0, 255) <= 96)
			{
				Actor f = Spawn("TeslaFX", Owner.Pos + (frandom[Blood](-Owner.Radius,Owner.Radius), 
														frandom[Blood](-Owner.Radius,Owner.Radius), 
														frandom[Blood](0,Owner.Height)));
				If(f)
				{
					f.Master = Owner;
					f.vel.z += frandom[Blood](-0.25, 0.25);
				}
			}
		}
		
		Owner.A_SetAngle(owner.angle + random[Blood](-90, 90)); 
		Owner.A_TakeInventory("BloodyShock", Owner.bBOSS ? 2 : 1);
	}
}

Class TeslaBallAlt : FastProjectile replaces BFGBall
{
	Default
	{
		PROJECTILE;
		+ROLLSPRITE
		+INTERPOLATEANGLES
		+FORCEXYBILLBOARD
		+NODAMAGETHRUST
		+EXTREMEDEATH
		+BLOODLESSIMPACT
		-BLOODSPLATTER
		Speed 96;
		DamageFunction (random[Blood](149,151));
		DamageType "Shock";
		SeeSound "TeslaBall";
		DeathSound "TeslaHit";
		ActiveSound "";
		Radius 4;
		Height 8;
		RenderStyle "Add";
		Decal "TeslaLightning";
		MissileType "TeslaTrail";
		MissileHeight 8;
		Scale 1.25;
	} int cycles;
	
	Override Void PostBeginPlay()
	{
		Super.PostBeginPlay();
		A_SetRoll(random(0,359));
		A_SpawnItemEx("TeslaBallLight2",0,0,0,0,0,0,0,SXF_NOCHECKPOSITION|SXF_SETMASTER|SXF_ORIGINATOR,0);
	}
	
	States
	{
	Spawn:
		JJJJ A 1 BRIGHT NoDelay
		{
			A_SetRoll(roll + 45,SPF_INTERPOLATE);
			For(int i = 0; i != 72; i++)
			{ A_SpawnProjectile("TeslaRailer",0,0,i*5,CMF_AIMDIRECTION|CMF_TRACKOWNER,0); }
		}
		Loop;
	Death:
		TNT1 A 0
		{
			A_RemoveChildren(1,RMVF_EVERYTHING,"","TeslaBallLight2");
			A_RadiusGive("BloodyShock", 192, RGF_MONSTERS, random[Blood](104, 106));
			
			For(int a = -90; a != 90; a++)
			{
				For(int b = 0; b != 18; b++)
				{ A_SpawnProjectile("TeslaFX2",0,0,frandom(0,359),CMF_AIMDIRECTION|CMF_SAVEPITCH,a); }
			}
				
			For(int c = 0; c != 105; c++)
			{ 
				A_SpawnParticle("LightBlue",SPF_FULLBRIGHT|SPF_RELATIVE,70,frandom(2,5),frandom(0,359),0,0,0,frandom(-4,4),frandom(-4,4),frandom(-1,8),0,0,-0.4,1.0,-1,0);
				A_SpawnItemEx("TeslaFX",0,0,0,frandom(-6,6),frandom(-6,6),frandom(-6,6),frandom(0,359),SXF_NOCHECKPOSITION, 128);
				A_SpawnItemEx("TeslaFX",0,0,0,frandom(-6,6),frandom(-6,6),frandom(-6,6),frandom(0,359),SXF_NOCHECKPOSITION, 192);
			}
			
			For(int d = 0; d != 7; d++)
			{
				A_SpawnItemEx("TeslaShockwave2",0,0,0,0,0,0,0,SXF_NOCHECKPOSITION,0);
			}
			
			A_SetScale(1.75,1.75); 
			A_SpawnItemEx("TeslaBallDamage",0,0,0,0,0,0,0,SXF_NOCHECKPOSITION|SXF_TRANSFERPOINTERS,0);
			//A_Explode((random(49,51)),128,1,1,0,0,0,"Nothing","Shock");
			//A_Explode((random(49,51)),256,0,1,0,0,0,"Nothing","Shock");
			A_QuakeEx(7,7,7,35,0,512,"Blank",QF_RELATIVE|QF_SCALEDOWN|QF_WAVE,0,0,0,256,0,1.5*randompick(-1,1),frandom(5.5,8.5));
			A_Scream(); A_AlertMonsters(); bROLLSPRITE = 0; bBLOODLESSIMPACT = 1; bDONTSPLASH = 1;
		}
		BFG0 EFGHIJK 2 BRIGHT;
		BFG0 LMNO 4 BRIGHT;
		Stop;
	}
}

Class TeslaBallDamage : SplashFunc
{
	Default
	{
		DamageType "Shock";
		SplashFunc.Setup 192, 192, 14, True;
	}
}

Class TeslaRailer : Actor
{
	Default
	{
		Radius 1;
		Height 1;
		Speed 0;
		MinMissileChance 0;
		PROJECTILE;
		+NOINTERACTION
		+ISMONSTER
		+FRIENDLY
		+QUICKTORETALIATE
		+PAINLESS
		+NODAMAGETHRUST
		+NOTARGET
		Obituary "%o got too close to a Tesla Cannonball fired by %k.";
		DamageType "Shock";
		MissileHeight 0;
	}
	
	States
	{
	Spawn:
		TNT1 A 1 NoDelay A_LookEx(0,32,400,0,5);
		Stop;
	See:
		TNT1 A 1 
		{
			A_FaceTarget();
			A_CustomRailgun((random[Blood](5,7)),0,"","LightBlue",RGF_SILENT|RGF_NOPIERCING,1,32,"TeslaPuff",0,0,0,0,4,0,"TeslaFX4");
		}
		Goto Death;
	Death:
		TNT1 A 0;
		Stop;
	}
}

Class TeslaPuff : Actor
{
	Default
	{
		+BLOODLESSIMPACT
		+NOTONAUTOMAP
		+FRIENDLY
		+ALWAYSPUFF
		+PUFFONACTORS
		+NOTARGET
		+NODAMAGETHRUST
		+EXTREMEDEATH
		DamageType "Shock";
		SeeSound "TeslaHitWall";
	}
	States
	{
	Spawn:
		TNT1 A 0;
		BFIR BBBBBBBBBB 0 A_SpawnParticle("LightBlue",SPF_FULLBRIGHT|SPF_RELATIVE,35,frandom(2,5),frandom(0,359),0,0,0,frandom(-4,4),frandom(-4,4),frandom(-1,8),0,0,-0.4,1.0,-1,0);
		TNT1 AAAAAAAAAA 0 A_SpawnItemEx("TeslaFX",0,0,0,frandom(-1.3,1.3),frandom(-1.3,1.3),frandom(-1.3,1.3),frandom(0,359),SXF_NOCHECKPOSITION,0);
		TNT1 A 5 A_RadiusGive("BloodyShock", 72, RGF_MONSTERS, random[Blood](3, 5));
		Stop;
	}
}

Class TeslaTrail : Actor
{
	Default
	{
		+NOINTERACTION
		+FRIENDLY
	}
	States
	{
	Spawn:
		TNT1 A 0;
		//TNT1 A 0 A_SpawnItemEx("TeslaBallGhost", 0, flags: SXF_NOCHECKPOSITION|SXF_TRANSFERROLL);
		TNT1 AAAAAAA 0 A_SpawnItemEx("TeslaFX",-8,frandom(-10,10),frandom(-10,10),frandom(-1,1),frandom(-1,1),frandom(-1,1),frandom(0,359),SXF_NOCHECKPOSITION,192);
		Stop;
	}
}

Class TeslaTrail2 : Actor
{
	Default
	{
		+NOINTERACTION
		+FRIENDLY
	}
	States
	{
	Spawn:
		TNT1 A 0;
		TNT1 A 0 A_SpawnItemEx("TeslaFX",-8,0,0,frandom(-4,0),frandom(-0.25,0.25),frandom(-0.25,0.25),0,SXF_NOCHECKPOSITION,200);
		TNT1 AAA 0 A_SpawnItemEx("TeslaParticle",-8,0,0,frandom(-0.5,0.5),frandom(-0.5,0.25),frandom(-0.5,0.5),0,SXF_NOCHECKPOSITION,224);
		Stop;
	}
}

Class TeslaParticle : TeslaGlow
{
	Default { Scale .075; }
	States
	{
	Spawned:
		"####" "#" 1 BRIGHT A_FadeOut(0.05, 1);
		Wait;
	}
}

Class TeslaBallGhost : Actor
{
	Default
	{
		+ROLLSPRITE
		+FORCEXYBILLBOARD
		+NOINTERACTION
		Renderstyle "Add";
		Scale 1.25;
	}
	
	int left;
	
	Override void PostBeginPlay()
	{
		Super.PostBeginPlay();
		left = RandomPick[Blood](-1, 1);
	}
	
	States
	{
	Spawn:
		JJJJ A 1 BRIGHT NoDelay
		{
			A_SetRoll(roll + 45*invoker.Left,SPF_INTERPOLATE);
			Scale.X *= 0.85;
			Scale.Y = Scale.X;
			A_FadeOut(0.05, 1);
		}
		Wait;
	}
}

Class TeslaFX : ZapFXBase {}
Class TeslaFX2 : ZapFXBase
{
	Default
	{
		PROJECTILE;
		+NOCLIP
		Radius 1;
		Height 1;
		Speed 12;
		Scale 0.4;
	}
	States
	{
	Spawn:
		ZAPR AABBCC 1 BRIGHT;
		ZAPR AABBCCAABBCCDDEEEEE 1 BRIGHT { A_ScaleVelocity(0.875); A_FadeOut(0.05,1); }
		Wait;
	}
}
Class TeslaFX3 : ZapFXBase {}
Class TeslaFX4 : ZapFXBase
{
	Default
	{
		+NOINTERACTION
		Scale 0.25;
	}
	States
	{
	Spawn:
		ZAPR ABCDE 0 NoDelay A_Jump(1, "Spawned");
		Loop;
	Spawned:
		"####" "#" 1 BRIGHT A_FadeOut(0.4, 1);
		Wait;
	}
}

Class TeslaShockwave : ShockwaveBase
{
	Default { Scale 0.2; }
	States { Spawn: BMFB F 0; Goto Super::Spawn; }
}

Class TeslaShockwave2 : ShockwaveBase
{
	Default { Scale 1.33; }
	States { Spawn: BMFB F 0; Goto Super::Spawn; }
}

Class LightTesla : DynamicLight
{
	int cnt;
	Default
	{
		DynamicLight.Type "Point";
		args 128,128,255,66;
	}
	override void Tick()
	{
		Super.Tick();
		if ( !master )
		{
			Destroy();
			return;
		}
		if ( master.player ) SetOrigin(master.Vec2OffsetZ(0,0,master.player.viewz),true);
		else SetOrigin(master.pos,true);
		args[LIGHT_INTENSITY] -= 10;
		if ( cnt++ > 6 ) Destroy();
	}
}

Class TeslaBallLight : LightNapalm
{
	Default
	{
		Args 128, 128, 255, 30;
	}
}

Class TeslaBallLight2 : LightNapalm
{
	Default
	{
		Args 128, 128, 255, 64;
	}
}

Class LightTeslaHit : DynamicLight
{
	int cnt;
	Default
	{
		DynamicLight.Type "Point";
		args 128,128,255,56;
	}
	override void Tick()
	{
		Super.Tick();
		If(IsFrozen()) Return;
		args[LIGHT_INTENSITY] -= 2;
		args[LIGHT_RED] *= 0.725;
		args[LIGHT_GREEN] *= 0.725;
		args[LIGHT_BLUE] *= 0.725;
		If(cnt++ > 12) Destroy();
	}
}

Class TeslaShockLight : DynamicLight
{
	int cnt;
	Default
	{
		DynamicLight.Type "Point";
		args 128,128,255,26;
	}
	
	Override void PostBeginPlay()
	{
		Super.PostBeginPlay();
		If(!Master) { Destroy(); Return; }
		args[LIGHT_INTENSITY] = Master.Radius * frandom(0.75, 1.5);
	}
	
	Override void Tick()
	{
		Super.Tick();
		If(Master) 
		{
			SetOrigin(Master.Pos,true);
			args[LIGHT_RED] *= 0.6;
			args[LIGHT_GREEN] *= 0.6;
			args[LIGHT_BLUE] *= 0.6;
		}
		If(cnt++ > 4) { Destroy(); Return; }
		If(IsFrozen()) Return;
		If(!Master) 
		{ 
			Destroy(); 
			Return;
		}
	}
}