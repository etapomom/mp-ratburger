Class AkIncinerator : Incinerator
{
	Default
	{
		Tag "Akimbo Napalm Launcher";
		Obituary "%o was incinerated by %k's akimbo Napalm Launchers.";
		+WEAPON.POWERED_UP
		Weapon.SisterWeapon "Incinerator";
		Scale 0.7;
		BloodWeapon.XOff 40.;
	}
	
	States
	{
	Select: 
		NAPL J 0 
		{ 	
			A_Overlay(100,"NapalmFX"); 
			A_OverlayFlags(100,PSPF_ADDWEAPON|PSPF_ADDBOB|PSPF_RENDERSTYLE|PSPF_ALPHA,1);
			A_OverlayRenderStyle(100,STYLE_TRANSLUCENT);
			
			A_Akimbo(200, "Akimbo_NapalmFX", PSPF_RENDERSTYLE|PSPF_ALPHA, 1.0, STYLE_TRANSLUCENT);
			A_Akimbo(-10, "Akimbo_Select");
			A_Akimbo(-666, "Akimbo_Handler");
			Invoker.Raised = True;
		} 	
		Goto SelectLoop;
	Deselect: 
		NAPL J 0 
		{
			For(int i = 0; i != 5; i++)
			{
				A_Overlay(100+i,"StopOverlay"); 
				A_Overlay(200+i,"StopOverlay"); 
			}
			A_Akimbo(-10, "Akimbo_Deselect");
			Invoker.Raised = False;
		} 
		Goto DeselectLoop;
	Ready: 
		NAPL J 0 A_JumpIf(Invoker.Raised == 0 && CountInv("Power_Akimbo"), "Select");
		//NAPL J 0 { If(!CountInv("Power_Akimbo")) A_TakeInventory("AkIncinerator"); }
		NAPL J 1 A_WeaponReady2();
		Loop;
	Akimbo_Deselect: NAPL J 0; Goto LeftLower;
	Akimbo_Select: NAPL J 0; Goto LeftRaise;
	Akimbo_Ready: NAPL JJ 1 A_AkimboOffset(-10, 0, 0); Loop;
	Fire:
		//NAPL J 0 A_Akimbo(-10, "Akimbo_Fire");
		NAPL J 1 BRIGHT
		{
			A_StartSound("NapalmLauncher", CHAN_WEAPON, CHANF_OVERLAP, 1.0, 0.85); 
			A_AlertMonsters();
			A_FireProjectile("NapalmBall",0,0,8,-2,0,0);
			A_Overlay(-100, "Muzzle");
			A_OverlayFlags(-100, PSPF_ADDBOB|PSPF_ADDWEAPON, 1);
			A_WeaponReady2(WRF_DISABLE, 12, 12);	
			A_Overlay(69,"NapalmAdd"); 
			A_OverlayFlags(69, PSPF_ADDWEAPON|PSPF_ADDBOB|PSPF_RENDERSTYLE|PSPF_ALPHA, 1);
			A_OverlayRenderStyle(69, STYLE_TRANSLUCENT);
			A_TakeInventory("Napalm",1,TIF_NOTAKEINFINITE); 
			A_GunFlash("Flash");
			A_SpawnItemEx("LightNapalm", flags: SXF_NOCHECKPOSITION|SXF_SETMASTER);
		}
		NAPL J 1 A_WeaponReady2(WRF_DISABLE,16,16);
		NAPL J 1 A_WeaponReady2(WRF_DISABLE,18,18);
		NAPL J 1 A_WeaponReady2(WRF_DISABLE,19,19);
		NAPL J 1 A_WeaponReady2(WRF_DISABLE,20,20);
		NAPL J 1 A_WeaponReady2(WRF_DISABLE,21,21);
		NAPL J 1 A_WeaponReady2(WRF_DISABLE,20,20);
		NAPL J 1 A_WeaponReady2(WRF_DISABLE,19,19);
		NAPL J 0 A_Akimbo(-10, "Akimbo_Fire");
		NAPL J 1 A_WeaponReady2(WRF_DISABLE,18,18);
		NAPL J 1 A_WeaponReady2(WRF_DISABLE,16,16);
		NAPL J 1 A_WeaponReady2(WRF_DISABLE,12,12);
		NAPL J 1 A_WeaponReady2(WRF_DISABLE,8,8);
		NAPL J 1 A_WeaponReady2(WRF_DISABLE,6,6);
		NAPL J 1 A_WeaponReady2(WRF_DISABLE,4,4);
		NAPL J 1 A_WeaponReady2(WRF_DISABLE,3,3);
		NAPL J 1 A_WeaponReady2(WRF_DISABLE,2,2);
		NAPL J 1 A_WeaponReady2(WRF_DISABLE,1,1);
		NAPL J 1 A_WeaponReady2(WRF_DISABLE,0.5,0.5);
		//NAPL JJJJJJJJ 1 A_WeaponReady2(WRF_DISABLE);
		NAPL J 1 { A_WeaponReady2(); A_ReFire("Fire"); }
		Goto Ready;
	Akimbo_Fire:
		//NAPL J 8;
		NAPL J 1 BRIGHT
		{
			A_StartSound("NapalmLauncher", CHAN_WEAPON, CHANF_OVERLAP, 1.0, 0.85); 
			A_AlertMonsters();
			A_FireProjectile("NapalmBall",0,0,-8,-2,0,0);
			A_AkimboOffset(-10, 12, 12);
			A_Akimbo(-101, "Muzzle");
			A_Akimbo(70, "Akimbo_NapalmAdd", PSPF_RENDERSTYLE|PSPF_ALPHA, 1.0, STYLE_TRANSLUCENT);
			A_AkimboOffset2(-101, 0, 0);
			A_AkimboOffset2(70, 0, 0);
			A_TakeInventory("Napalm",1,TIF_NOTAKEINFINITE); 
			A_GunFlash("Flash");
			A_SpawnItemEx("LightNapalm", flags: SXF_NOCHECKPOSITION|SXF_SETMASTER);
		}
		NAPL J 1 A_AkimboOffset(-10, 16, 16);
		NAPL J 1 A_AkimboOffset(-10, 18, 18);
		NAPL J 1 A_AkimboOffset(-10, 19, 19);
		NAPL J 1 A_AkimboOffset(-10, 20, 20);
		NAPL J 1 A_AkimboOffset(-10, 21, 21);
		NAPL J 1 A_AkimboOffset(-10, 20, 20);
		NAPL J 1 A_AkimboOffset(-10, 19, 19);
		NAPL J 1 A_AkimboOffset(-10, 18, 18);
		NAPL J 1 A_AkimboOffset(-10, 16, 16);
		NAPL J 1 A_AkimboOffset(-10, 12, 12);
		NAPL J 1 A_AkimboOffset(-10, 8, 8);
		NAPL J 1 A_AkimboOffset(-10, 6, 6);
		NAPL J 1 A_AkimboOffset(-10, 4, 4);
		NAPL J 1 A_AkimboOffset(-10, 3, 3);
		NAPL J 1 A_AkimboOffset(-10, 2, 2);
		NAPL J 1 A_AkimboOffset(-10, 1, 1);
		NAPL J 1 A_AkimboOffset(-10, 0.5, 0.5);
		Goto Akimbo_Ready;
	/*	
	AltFire:
		NAPL J 1 BRIGHT
		{
			If(CountInv("Napalm") > 0 && CountInv("Napalm") < 12) { Return ResolveState("Fire"); }
			If(CountInv("Napalm") == 0) { Return ResolveState("Reselect"); }
			
			A_PlaySound("NapalmLauncherAlt",CHAN_WEAPON,2.78); A_AlertMonsters();
			
			A_FireProjectile("NapalmBallAlt",0,0,0,-2,4,0);
			
			BloodyHandler.DoSwing(Self, (frandom(-0.05, -0.075), frandom(0.2, 0.25)), 8, -1, 7, SWING_Spring, 1, 2);
			
			A_Overlay(-10, "Muzzle"); A_WeaponReady2(WRF_DISABLE,12,12);	
			A_OverlayFlags(-10,PSPF_ADDBOB|PSPF_ADDWEAPON,1);
			
			A_Overlay(69,"NapalmAdd"); A_OverlayFlags(69,PSPF_ADDWEAPON|PSPF_ADDBOB|PSPF_RENDERSTYLE|PSPF_ALPHA,1);
			A_OverlayRenderStyle(69,STYLE_TRANSLUCENT);
			
			A_TakeInventory("Napalm",12,TIF_NOTAKEINFINITE); A_GunFlash("Flash");
			A_SpawnItemEx("LightNapalm2",0,0,0,0,0,0,0,SXF_NOCHECKPOSITION|SXF_SETMASTER,0); 
			
			Return ResolveState(Null);
		}
		NAPL J 1 A_WeaponReady2(WRF_DISABLE,18,18);
		NAPL J 1 A_WeaponReady2(WRF_DISABLE,22,22);
		NAPL J 1 A_WeaponReady2(WRF_DISABLE,24,24);
		NAPL J 1 A_WeaponReady2(WRF_DISABLE,25,25);
		NAPL J 1 A_WeaponReady2(WRF_DISABLE,26,26);
		NAPL JA 1 A_WeaponReady2(WRF_DISABLE,26.5,26.5);
		NAPL J 1 A_WeaponReady2(WRF_DISABLE,26,26);
		NAPL J 1 A_WeaponReady2(WRF_DISABLE,25,25);
		NAPL J 1 A_WeaponReady2(WRF_DISABLE,24,24);
		NAPL J 1 A_WeaponReady2(WRF_DISABLE,22,22);
		NAPL J 1 A_WeaponReady2(WRF_DISABLE,18,18);
		NAPL J 1 A_WeaponReady2(WRF_DISABLE,12,12);
		NAPL J 1 A_WeaponReady2(WRF_DISABLE,8,8);
		NAPL J 1 A_WeaponReady2(WRF_DISABLE,6,6);
		NAPL J 1 A_WeaponReady2(WRF_DISABLE,4,4);
		NAPL J 1 A_WeaponReady2(WRF_DISABLE,3,3);
		NAPL J 1 A_WeaponReady2(WRF_DISABLE,2,2);
		NAPL J 1 A_WeaponReady2(WRF_DISABLE,1,1);
		NAPL J 1 A_WeaponReady2(WRF_DISABLE,0.5,0.5);
		NAPL J 1 { A_WeaponReady2(WRF_NOSWITCH); A_ReFire("AltFire"); }
		Goto Ready;*/
	
	NapalmAdd:
		NAPL KKKK 1 BRIGHT;
		NAPL K 1 BRIGHT A_OverlayAlpha(69,0.9);
		NAPL K 1 BRIGHT A_OverlayAlpha(69,0.7);
		NAPL K 1 BRIGHT A_OverlayAlpha(69,0.6);
		NAPL K 1 BRIGHT A_OverlayAlpha(69,0.5);
		NAPL K 1 BRIGHT A_OverlayAlpha(69,0.4);
		NAPL K 1 BRIGHT A_OverlayAlpha(69,0.3);
		NAPL K 1 BRIGHT A_OverlayAlpha(69,0.2);
		NAPL K 1 BRIGHT A_OverlayAlpha(69,0.1);
		Stop;
		
	Akimbo_NapalmAdd:
		NAPL KKKK 1 BRIGHT A_AkimboOffset2(70, 0, 0);
		NAPL K 1 BRIGHT A_AkimboFX(70,0.9);
		NAPL K 1 BRIGHT A_AkimboFX(70,0.7);
		NAPL K 1 BRIGHT A_AkimboFX(70,0.6);
		NAPL K 1 BRIGHT A_AkimboFX(70,0.5);
		NAPL K 1 BRIGHT A_AkimboFX(70,0.4);
		NAPL K 1 BRIGHT A_AkimboFX(70,0.3);
		NAPL K 1 BRIGHT A_AkimboFX(70,0.2);
		NAPL K 1 BRIGHT A_AkimboFX(70,0.1);
		Stop;
	
	Akimbo_NapalmFX:
		NAPL CC 1 BRIGHT A_AkimboOffset2(200, 0, 0);
		NAPL C 0 BRIGHT { A_Akimbo(201, "Akimbo_NapalmFX2", PSPF_RENDERSTYLE|PSPF_ALPHA, 1.0, STYLE_TRANSLUCENT); A_AkimboOffset2(201, 0, 0); }
		NAPL CC 1 BRIGHT A_AkimboOffset2(200, 0, 0);
		NAPL C 1 BRIGHT A_AkimboFX(200,0.9);
		NAPL C 1 BRIGHT A_AkimboFX(200,0.8);
		NAPL C 1 BRIGHT A_AkimboFX(200,0.7);
		NAPL C 1 BRIGHT A_AkimboFX(200,0.6);
		NAPL C 1 BRIGHT A_AkimboFX(200,0.5);
		NAPL C 1 BRIGHT A_AkimboFX(200,0.4);
		NAPL C 1 BRIGHT A_AkimboFX(200,0.3);
		NAPL C 1 BRIGHT A_AkimboFX(200,0.2);
		NAPL C 1 BRIGHT A_AkimboFX(200,0.1);
		NAPL C 1 BRIGHT A_AkimboFX(200,0.05);
		Stop;
	Akimbo_NapalmFX2:
		NAPL DD 1 BRIGHT A_AkimboOffset2(201, 0, 0);
		NAPL D 0 BRIGHT { A_Akimbo(202, "Akimbo_NapalmFX3", PSPF_RENDERSTYLE|PSPF_ALPHA, 1.0, STYLE_TRANSLUCENT); A_AkimboOffset2(202, 0, 0); }
		NAPL DD 1 BRIGHT A_AkimboOffset2(201, 0, 0);
		NAPL D 1 BRIGHT A_AkimboFX(201,0.9);
		NAPL D 1 BRIGHT A_AkimboFX(201,0.8);
		NAPL D 1 BRIGHT A_AkimboFX(201,0.7);
		NAPL D 1 BRIGHT A_AkimboFX(201,0.6);
		NAPL D 1 BRIGHT A_AkimboFX(201,0.5);
		NAPL D 1 BRIGHT A_AkimboFX(201,0.4);
		NAPL D 1 BRIGHT A_AkimboFX(201,0.3);
		NAPL D 1 BRIGHT A_AkimboFX(201,0.2);
		NAPL D 1 BRIGHT A_AkimboFX(201,0.1);
		NAPL D 1 BRIGHT A_AkimboFX(201,0.05);
		Stop;
	Akimbo_NapalmFX3:
		NAPL EE 1 BRIGHT A_AkimboOffset2(202, 0, 0);
		NAPL E 0 BRIGHT { A_Akimbo(203, "Akimbo_NapalmFX4", PSPF_RENDERSTYLE|PSPF_ALPHA, 1.0, STYLE_TRANSLUCENT); A_AkimboOffset2(203, 0, 0); }
		NAPL EE 1 BRIGHT A_AkimboOffset2(202, 0, 0);
		NAPL E 1 BRIGHT A_AkimboFX(202,0.9);
		NAPL E 1 BRIGHT A_AkimboFX(202,0.8);
		NAPL E 1 BRIGHT A_AkimboFX(202,0.7);
		NAPL E 1 BRIGHT A_AkimboFX(202,0.6);
		NAPL E 1 BRIGHT A_AkimboFX(202,0.5);
		NAPL E 1 BRIGHT A_AkimboFX(202,0.4);
		NAPL E 1 BRIGHT A_AkimboFX(202,0.3);
		NAPL E 1 BRIGHT A_AkimboFX(202,0.2);
		NAPL E 1 BRIGHT A_AkimboFX(202,0.1);
		NAPL E 1 BRIGHT A_AkimboFX(202,0.05);
		Stop;
	Akimbo_NapalmFX4:
		NAPL FF 1 BRIGHT A_AkimboOffset2(203, 0, 0);
		NAPL F 0 BRIGHT { A_Akimbo(204, "Akimbo_NapalmFX5", PSPF_RENDERSTYLE|PSPF_ALPHA, 1.0, STYLE_TRANSLUCENT); A_AkimboOffset2(204, 0, 0); }
		NAPL FF 1 BRIGHT A_AkimboOffset2(200, 0, 0);
		NAPL F 1 BRIGHT A_AkimboFX(203,0.9);
		NAPL F 1 BRIGHT A_AkimboFX(203,0.8);
		NAPL F 1 BRIGHT A_AkimboFX(203,0.7);
		NAPL F 1 BRIGHT A_AkimboFX(203,0.6);
		NAPL F 1 BRIGHT A_AkimboFX(203,0.5);
		NAPL F 1 BRIGHT A_AkimboFX(203,0.4);
		NAPL F 1 BRIGHT A_AkimboFX(203,0.3);
		NAPL F 1 BRIGHT A_AkimboFX(203,0.2);
		NAPL F 1 BRIGHT A_AkimboFX(203,0.1);
		NAPL F 1 BRIGHT A_AkimboFX(203,0.05);
		Stop;
	Akimbo_NapalmFX5:
		NAPL GGGGG 1 BRIGHT A_AkimboOffset2(204, 0, 0);
		NAPL G 1 BRIGHT A_AkimboFX(204,0.9);
		NAPL G 1 BRIGHT A_AkimboFX(204,0.8);
		NAPL G 1 BRIGHT A_AkimboFX(204,0.7);
		NAPL G 1 BRIGHT A_AkimboFX(204,0.6);
		NAPL G 1 BRIGHT { A_Akimbo(200, "Akimbo_NapalmFX", PSPF_RENDERSTYLE|PSPF_ALPHA, 1.0, STYLE_TRANSLUCENT); A_AkimboOffset2(200, 0, 0); A_AkimboFX(204, 0.5); }
		NAPL G 1 BRIGHT A_AkimboFX(204,0.4);
		NAPL G 1 BRIGHT A_AkimboFX(204,0.3);
		NAPL G 1 BRIGHT A_AkimboFX(204,0.2);
		NAPL G 1 BRIGHT A_AkimboFX(204,0.1);
		NAPL G 1 BRIGHT A_AkimboFX(204,0.05);
		Stop;
	}
}