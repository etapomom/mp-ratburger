	
	const BLOODY = SXF_NOCHECKPOSITION|SXF_TRANSFERTRANSLATION|SXF_TRANSFERPOINTERS;

Class RatburgerBlood : Blood
{
	Default
	{
		+NOBLOCKMAP
		+PUFFGETSOWNER
		+FORCEXYBILLBOARD
		+RANDOMIZE
		+DONTSPLASH
		+NOTELEPORT
		+NOGRAVITY
		+ROLLSPRITE
		+ROLLCENTER
		+RIPPER
		+BLOODLESSIMPACT
		+PAINLESS
		+THRUACTORS
		-RANDOMIZE
		-SOLID
		-ALLOWPARTICLES
		Scale 0.55;
		RenderStyle "Translucent";
	}
	
	Override void PostBeginPlay()
	{
		Super.PostBeginPlay();
		A_SetRoll(frandom(-20,20));
		bSPRITEFLIP = random(0,1);
		Scale.X *= frandom(0.95,1.05);
		Scale.Y = Scale.X;
		If(Target) SetShade(Target.BloodColor); // Whoa, it actually worked.
		
		Actor a = Spawn("RatburgerBloodTrailer", Self.Pos);
		If(a)
		{
			If(Random[Blood](0, 255) <= 128)
				a.Destroy();
			
			If(Target)
			{
				a.Translation = Translation;
				a.Target = Self.Target;
				a.Vel.X = (Target.Vel.X * 0.75) + FRandom[Blood](-5, 5);
				a.Vel.Y = (Target.Vel.Y * 0.75) + FRandom[Blood](-5, 5);
				a.Vel.Z = (Target.Vel.Z * 0.75) + FRandom[Blood](0, 10);
			}
			
			Else
				a.Destroy();
		}
		
		For(int i = 0; i != 8; i++)
		{
			Actor b = Spawn("RatburgerBloodParticles", Self.Pos);
			If(b)
			{
				If(Random[Blood](0, 255) <= 64)
						b.Destroy();
				
				If(Target)
				{
					b.Translation = Translation;
					b.Target = Self.Target;
					b.Vel.X = (Target.Vel.X * 0.5) + FRandom[Blood](-4, 4);
					b.Vel.Y = (Target.Vel.Y * 0.5) + FRandom[Blood](-4, 4);
					b.Vel.Z = (Target.Vel.Z * 0.5) + FRandom[Blood](0, 12);
				}
				
				Else
					b.Destroy();
			}
		}
	}
	
	States
	{
	Spawn:
		TNT1 AAAAA 0;
		B1_A ABCD 3;
		B1_A E 1
		{
			A_SetRoll(0,SPF_INTERPOLATE);
			A_ChangeVelocity(0,0,-1,CVF_RELATIVE);
			Scale.X *= 1.05; Scale.Y = Scale.X;
			A_FadeOut(0.1,1);
		}
		Wait;
	}
}

Class ChunkBlood : RatburgerBlood
{
	Default { Scale 0.25; +NODECAL +FORCEDECAL Decal "None"; }
	
	Override void PostBeginPlay()
	{
		Actor.PostBeginPlay();
		
		If(Target) SetShade(Target.BloodColor);
		
		For(int i = 0; i != 2; i++)
		{
			Actor b = Spawn("RatburgerBloodParticles", Self.Pos);
			If(b)
			{
				If(Random[Blood](0, 255) < 64)
						b.Destroy();
				
				If(Target)
				{
					b.Translation = Translation;
					b.Target = Self.Target;
					b.Vel.X = (Target.Vel.X * 0.5) + FRandom[Blood](-4, 4);
					b.Vel.Y = (Target.Vel.Y * 0.5) + FRandom[Blood](-4, 4);
					b.Vel.Z = (Target.Vel.Z * 0.5) + FRandom[Blood](0, 8);
				}
				
				Else
					b.Destroy();
			}
		}
	}
}

Class RatburgerBloodTrailer : Actor
{
	Default
	{
		PROJECTILE;
		-NOGRAVITY
		+DONTSPLASH
		+WINDTHRUST
		+RIPPER
		+BLOODLESSIMPACT
		+PAINLESS
		+THRUACTORS
		Gravity 0.8;
		Radius 1;
		Height 1;
		Decal "BloodSplat";
	}
	
	const BLOODY = SXF_NOCHECKPOSITION|SXF_TRANSFERTRANSLATION;
	
	Override int SpecialMissileHit(Actor victim)
	{ Return 1; }
	
	Override void PostBeginPlay()
	{
		Super.PostBeginPlay();
		If(Target) 
		{ 
			//SetShade(Target.BloodColor); 
			CopyBloodColor(Target);
		}
	}
	
	States
	{
	Spawn:
		TNT1 A 1 NoDelay A_SpawnItemEx("RatburgerBloodTrail",0,0,0,0,0,0,0,BLOODY|SXF_TRANSFERPOINTERS,0);
		Loop;
	Death:
		TNT1 A 0;
		TNT1 A 0
		{
			If(Random[Blood](0, 255) < 96) A_StartSound("BloodGround", CHAN_BODY, CHANF_OVERLAP, 0.5, 1.5);
			A_SpawnItemEx("RatburgerBloodPool",0,0,0,0,0,0,0,BLOODY|SXF_TRANSFERPOINTERS, 0);
		}
		B3_A ABCDE 5;
		Stop;
	}
}

Class RatburgerBloodTrail : RatburgerBloodTrailer
{
	Default
	{
		Gravity 0.055;
		RenderStyle "Translucent";
		Scale 0.6;
		Decal "None";
		-WINDTHRUST
		+FORCEDECAL
		+RANDOMIZE
		+ROLLSPRITE
		+ROLLCENTER
		+FORCEXYBILLBOARD
	} int timer;
	
	Override void PostBeginPlay()
	{
		Super.PostBeginPlay();
		A_SetRoll(frandom(0,359));
		bSPRITEFLIP = random(0,1);
		Scale.X *= frandom(0.95,1.05);
		Scale.Y = Scale.X;
	}
	
	Override void Tick()
	{
		Super.Tick();
		If(IsFrozen()) Return;
		If(Timer++ >= 18) A_FadeOut(0.1, 1);
	}
	
	States
	{
	Spawn:
		B2_A ABCDE 5;
		Loop;
	Death:
		TNT1 A 5;
		Stop;
	}
}

Class RatburgerBloodParticles : RatburgerBloodTrail
{
	Default { Scale 0.255; Gravity 0.67; Alpha 0.75; }
	Override void PostBeginPlay() { Super.PostBeginPlay(); Timer = -35; }
	States
	{
	Spawn:
		B5_A B 1;
		Loop;
	Death:
		TNT1 A 0 { A_SpawnItemEx("RatburgerSmallerBloodPool",0,0,0,0,0,0,0,BLOODY|SXF_TRANSFERPOINTERS, 156); }
		B3_A ABCDE 5 { Scale = (.33, .33); Invoker.Timer = 0; }
		Stop;
	}
}

Class RatburgerBloodPool : Actor
{
	Default
	{
		+FLATSPRITE
		+MOVEWITHSECTOR
		+NOBLOCKMAP
		+NOTIMEFREEZE
		RenderStyle "Translucent";
		Scale 0.0;
	}
	
	Override void PostBeginPlay()
	{
		Super.PostBeginPlay();
		
		If(Self.Pos.Z <= FloorZ) 	{ bFLOORHUGGER = 1; bCEILINGHUGGER = 0; }
		If(Self.Pos.Z >= CeilingZ) 	{ bFLOORHUGGER = 0; bCEILINGHUGGER = 1; }
		
		If(!bFLOORHUGGER && !bCEILINGHUGGER)
		{
			Destroy();
			Return;
		}
		
		A_SetAngle(frandom(0,359));
		bSPRITEFLIP = random(0,1);
		Scale.X *= frandom(0.9,1.1);
		Scale.Y = Scale.X;
		Alpha = frandom[Blood](.6, .75);
	} int timer;
	
	States
	{
	Spawn:
		B5_A AAAAAAAAAAAAAAA 1 { Scale.X += frandom(0.03, 0.05); Scale.Y = Scale.X; }
	Spawned:
		B5_A A 700 A_SetTics(105 * Ratburg_Gore_GibDuration);
		B5_A A 1 A_FadeOut(0.01, 1);
		Wait;
	}
}

Class RatburgerSmallBloodPool : RatburgerBloodPool
{
	States
	{
	Spawn:
		B5_A AAAAAAAAAAAAAAA 1 { Scale.X += frandom(0.01, 0.02); Scale.Y = Scale.X; }
	Spawned:
		B5_A A 700 A_SetTics(70 * Ratburg_Gore_GibDuration);
		B5_A A 1 A_FadeOut(0.01, 1);
		Wait;
	}
}

Class RatburgerSmallerBloodPool : RatburgerBloodPool
{
	States
	{
	Spawn:
		B5_A AAAAAAAAAAAAAAA 1 { Scale.X += frandom(0.0075, 0.0125); Scale.Y = Scale.X; }
	Spawned:
		B5_A A 700 A_SetTics(35 * Ratburg_Gore_GibDuration);
		B5_A A 1 A_FadeOut(0.01, 1);
		Wait;
	}
}