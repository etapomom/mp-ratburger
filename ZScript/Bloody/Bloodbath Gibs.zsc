Class BloodbathChunkBase : Actor
{
	Default
	{
		PROJECTILE;
		+ROLLSPRITE
		+ROLLCENTER
		+BOUNCEONFLOORS
		+BOUNCEONCEILINGS
		+BOUNCEONWALLS
		+CANBOUNCEWATER
		+USEBOUNCESTATE
		+MOVEWITHSECTOR
		+INTERPOLATEANGLES
		+RIPPER
		+BLOODLESSIMPACT
		+PAINLESS
		-NOGRAVITY
		Gravity 1.0;
		BounceFactor 0.67;
		WallBounceFactor 0.67;
		BounceCount 2;
		Scale 0.4;
		Radius 4;
		Height 8;
		BloodType "BloodbathCorpseHitboxBlood";
		Tag "Giblet";
		Health 20;
	}
	
	const BLOODY = SXF_NOCHECKPOSITION|SXF_TRANSFERTRANSLATION;
	
	Override int SpecialMissileHit(Actor victim) { Return 1; }
	
	Override void PostBeginPlay()
	{
		Super.PostBeginPlay();
		A_SetRoll(frandom(0,359));
	}
	
	bool boom;
	Override void Tick()
	{
		Super.Tick();
		If(Abs(Vel.X) >= 16 || Abs(Vel.Y) >= 16 || Abs(Vel.Z) >= 16) { boom = 1; }
		
		If(bCORPSE == 1)
		{
			A_PlaySound("Gibbed",CHAN_BODY);
			Destroy();
			Return;
		}
	}
	
	Action Void A_ChunkFly()
	{
		If(bSPRITEFLIP)
		{
			A_SetRoll(Roll - Max(10,Max(Abs(Vel.X),Abs(Vel.Y))), SPF_INTERPOLATE);
		}
		
		If(!bSPRITEFLIP)
		{	
			A_SetRoll(Roll + Max(10,Max(Abs(Vel.X),Abs(Vel.Y))), SPF_INTERPOLATE);
		}
	}
	
	States
	{
	Flight:
		"####" "#" 1 A_ChunkFly();
		Loop;
	Bounce:
		"####" "#" 0
		{
			A_SprayDecal("BloodSplat",32);
			A_SetRoll(frandom(0,359));
			If(Invoker.Boom)
			{
				A_PlaySound("Gibbed",CHAN_BODY);
				CVar PoolChance = Cvar.FindCVar("BB_PoolChance");
				A_SpawnItemEx("BloodbathBloodPool",0,0,0,0,0,0,0,BLOODY|SXF_TRANSFERPOINTERS, PoolChance.GetInt() * 32);
				For(int i = 0; i != 8; i++)
				{
					Double VX = Vel.X;
					Double VY = Vel.Y;
					A_SpawnItemEx("BloodbathChunk1b",0,0,Invoker.Height * 0.5,vx+frandom(-6,6),vy+frandom(-6,6),invoker.vel.z+frandom(4,12),frandom(0,359),BLOODY|SXF_TRANSFERPOINTERS,0);
				}
				Destroy();
			}
		}
		"####" "#" 0 A_Jump(256,"Spawn");
		Stop;
	Death:
		"####" E 700 
		{ 
			CVar GibDuration = Cvar.FindCVar("BB_GibDuration");
			A_SetTics(140 * GibDuration.GetInt());
			
			A_SpawnItemEx("BloodbathCorpseHitbox",0,0,0,0,0,0,0,BLOODY|SXF_TRANSFERTRANSLATION|SXF_ORIGINATOR|SXF_SETMASTER,0);
			CVar PoolChance = Cvar.FindCVar("BB_PoolChance");
			A_SpawnItemEx("BloodbathBloodPool",0,0,0,0,0,0,0,BLOODY|SXF_TRANSFERPOINTERS, PoolChance.GetInt() * 32);
			bROLLSPRITE = 0; 
			bNOTIMEFREEZE = 1; 
		}
		"####" E 1 A_FadeOut(0.01,1);
		Wait;
	}
}

Class BloodbathChunkBaseFlippable : BloodbathChunkBase
{
	Override void PostBeginPlay()
	{
		Super.PostBeginPlay();
		bSPRITEFLIP = random(0,1);
	}
}

Class BloodbathChunk1 : BloodbathChunkBaseFlippable
{
	Default { Scale 0.5; }
	
	Override void PostBeginPlay()
	{
		Super.PostBeginPlay();
		Scale.X *= frandom(0.95,1.05);
		Scale.Y = Scale.X;
	}
	
	States
	{
	Spawn:
		C5_A A 0 NoDelay A_Jump(255,1,2,3,4);
		C5_A ABCD 0;
		Goto Super::Flight;
	}
}

Class BloodbathChunk1b : BloodbathChunk1
{
	Default
	{
		-BOUNCEONFLOORS
		-BOUNCEONCEILINGS
		-BOUNCEONWALLS
		-CANBOUNCEWATER
		-USEBOUNCESTATE
		Scale 0.25;
	}
	States
	{
	Death:
		TNT1 A 0;
		TNT1 A 0 A_SpawnItemEx("BloodbathChunk1bImpact",0,0,0,0,0,0,0,BLOODY|SXF_TRANSFERPOINTERS,0);
		Stop;
	}
}

Class BloodbathChunk1bImpact : BloodbathTrailer
{
	States
	{
	Spawn:
	Death:
		B3_A ABCDE 5;
		Stop;
	}
}